{"ast":null,"code":"var _jsxFileName = \"/Users/kalinramsey/Work/HighTouchTechnologies/02Application/Trello_World/src/Comoponents/BoardContent/BoardContent.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Column from \"../Column/Column\";\nimport { mockData } from \"../../actions/mockData\";\nimport \"./BoardContent.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardContent = () => {\n  _s();\n\n  const [board, setBoard] = useState({});\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    const boardMockData = mockData.boards.find(item => item.id === \"board-1\");\n\n    if (boardMockData) {\n      setBoard(boardMockData);\n      setColumns(boardMockData.columns);\n    }\n  }, []);\n\n  if (_.isEmpty(board)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found\",\n        children: \"Board not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n  console.log(columns);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trelloColumns\",\n      children: [columns && columns.length > 0 && columns.map((column, index) => {\n        return /*#__PURE__*/_jsxDEV(Column, {\n          column: column\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(BoardContent, \"luxiK+F91jOVnAPxJ9y70/XUrUs=\");\n\n_c = BoardContent;\nexport default BoardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardContent\");","map":{"version":3,"names":["useEffect","useState","_","Column","mockData","BoardContent","board","setBoard","columns","setColumns","boardMockData","boards","find","item","id","isEmpty","console","log","length","map","column","index"],"sources":["/Users/kalinramsey/Work/HighTouchTechnologies/02Application/Trello_World/src/Comoponents/BoardContent/BoardContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Column from \"../Column/Column\";\nimport { mockData } from \"../../actions/mockData\";\n\nimport \"./BoardContent.scss\";\nimport { isCompositeComponentWithType } from \"react-dom/test-utils\";\nimport { stringify } from \"querystring\";\n\nconst BoardContent = () => {\n\tinterface Card {\n\t\tid: string;\n\t\tboardId: string;\n\t\tcolumnId: string;\n\t\ttitle: string;\n\t\timage: string | null;\n\t}\n\n\tinterface Column {\n\t\tid: string;\n\t\tboardId: string;\n\t\ttitle: string;\n\t\tcardOrder: Array<string>;\n\t\tcards: Array<Card>;\n\t}\n\n\tconst [board, setBoard] = useState({});\n\tconst [columns, setColumns] = useState<Array<Column>>([]);\n\n\tuseEffect(() => {\n\t\tconst boardMockData = mockData.boards.find((item) => item.id === \"board-1\");\n\t\tif (boardMockData) {\n\t\t\tsetBoard(boardMockData);\n\t\t\tsetColumns(boardMockData.columns);\n\t\t}\n\t}, []);\n\n\tif (_.isEmpty(board)) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='not-found'>Board not found</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\tconsole.log(columns);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='trelloColumns'>\n\t\t\t\t{columns &&\n\t\t\t\t\tcolumns.length > 0 &&\n\t\t\t\t\tcolumns.map((column, index) => {\n\t\t\t\t\t\treturn <Column key={column.id} column={column} />;\n\t\t\t\t\t})}\n\t\t\t\t<Column />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default BoardContent;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAO,qBAAP;;;;AAIA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAiB1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAgB,EAAhB,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACf,MAAMU,aAAa,GAAGN,QAAQ,CAACO,MAAT,CAAgBC,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAY,SAA3C,CAAtB;;IACA,IAAIJ,aAAJ,EAAmB;MAClBH,QAAQ,CAACG,aAAD,CAAR;MACAD,UAAU,CAACC,aAAa,CAACF,OAAf,CAAV;IACA;EACD,CANQ,EAMN,EANM,CAAT;;EAQA,IAAIN,CAAC,CAACa,OAAF,CAAUT,KAAV,CAAJ,EAAsB;IACrB,oBACC;MAAA,uBACC;QAAK,SAAS,EAAC,WAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADD,iBADD;EAKA;;EAEDU,OAAO,CAACC,GAAR,CAAYT,OAAZ;EAEA,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,eAAf;MAAA,WACEA,OAAO,IACPA,OAAO,CAACU,MAAR,GAAiB,CADjB,IAEAV,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;QAC9B,oBAAO,QAAC,MAAD;UAAwB,MAAM,EAAED;QAAhC,GAAaA,MAAM,CAACN,EAApB;UAAA;UAAA;UAAA;QAAA,QAAP;MACA,CAFD,CAHF,eAMC,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAND;IAAA;MAAA;MAAA;MAAA;IAAA;EADD,iBADD;AAYA,CAlDD;;GAAMT,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}